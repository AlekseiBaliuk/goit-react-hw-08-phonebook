{"version":3,"file":"static/js/302.c64b758f.chunk.js","mappings":"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","sources":["components/ContactForm/Form/Form.styled.jsx","components/ContactForm/Form/Form.jsx","components/ContactForm/ContactForm.jsx","redux/selectors.js","components/ContactListItem/ContactListItem.styled.jsx","components/EditContactModal/EditContactModal.slyled.jsx","components/EditContactModal/EditContactModal.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Loader/Loader.slyted.jsx","components/Loader/Loader.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  margin-left: auto;\n  margin-right: auto;\n  width: 350px;\n  padding: ${p => p.theme.space[4]}px;\n  border: ${p => `${p.theme.borders.normal} ${p.theme.colors.grey}`};\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: ${p => p.theme.space[2]}px;\n`;\n\nexport const Button = styled.button`\n  margin-top: ${p => p.theme.space[2]}px;\n  margin-bottom: ${p => p.theme.space[2]}px;\n  background-color: ${p => p.theme.colors.secondary};\n  color: ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radii.md};\n  border-color: ${p => p.theme.colors.secondary};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${p => p.theme.colors.primary};\n  }\n`;\n","import { useState } from 'react';\nimport * as SC from './Form.styled';\n\nexport const Form = ({ name = '', phone = '', btnText, onSubmit }) => {\n  const [contactName, setContactName] = useState(name);\n  const [contactNumber, setContactNumber] = useState(phone);\n\n  const formSubmitHandler = e => {\n    e.preventDefault();\n    const form = e.target;\n\n    const contactToAdd = {\n      name: form.elements.name.value,\n      phone: form.elements.phone.value,\n    };\n\n    onSubmit(contactToAdd);\n\n    setContactName('');\n    setContactNumber('');\n    form.reset();\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setContactName(value);\n        break;\n\n      case 'phone':\n        setContactNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <SC.Form onSubmit={formSubmitHandler}>\n      <SC.Label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={contactName}\n          onChange={handleChange}\n        />\n      </SC.Label>\n      <SC.Label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={contactNumber}\n          onChange={handleChange}\n        />\n      </SC.Label>\n      <SC.Button type=\"submit\">{btnText}</SC.Button>\n    </SC.Form>\n  );\n};\n","import React from 'react';\nimport {\n  useFetchContactsQuery,\n  useAddContactMutation,\n} from 'redux/contactsSlice';\nimport { Form } from './Form/Form';\nimport toast from 'react-hot-toast';\n\nexport const ContactForm = () => {\n  const [addContact] = useAddContactMutation();\n  const { data: contacts } = useFetchContactsQuery();\n\n  const formSubmitHandler = contactToAdd => {\n\n    if (\n      contacts.find(\n        contact =>\n          contact.name.toLowerCase() === contactToAdd.name.toLowerCase()\n      )\n    ) {\n      return alert(`${contactToAdd.name} is already in contacts.`);\n    }\n\n    addContact(contactToAdd);\n    toast.success('You add new contact.');\n\n  };\n\n  return <Form onSubmit={formSubmitHandler} btnText=\"Add contact\" />;\n};\n","\nexport const getFilter = state => state.filter;\n","import styled from '@emotion/styled';\n\nexport const ContactListLi = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const ContactListButton = styled.button`\n  margin-top: ${p => p.theme.space[2]}px;\n  margin-bottom: ${p => p.theme.space[2]}px;\n  background-color: ${p => p.theme.colors.secondary};\n  color: ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radii.md};\n  border-color: ${p => p.theme.colors.secondary};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${p => p.theme.colors.primary};\n  }\n\n  &:disabled {\n    color: ${p => p.theme.colors.white};\n    background-color: ${p => p.theme.colors.grey};\n    border-color: ${p => p.theme.colors.grey};\n  }\n`;\n\nexport const BtnWrapper = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  gap: 5px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.3);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Modal = styled.div`\npadding: 24px;\nbackground-color: ${p => p.theme.colors.white}`\n","import {\n  useFetchContactsByIdQuery,\n  useUpdateContactMutation,\n} from 'redux/contactsSlice';\nimport { Form } from 'components/ContactForm/Form/Form';\nimport { Modal, Overlay } from './EditContactModal.slyled';\n\nexport const EditContactModal = ({ id, toggleModal }) => {\n  const { data: contact } = useFetchContactsByIdQuery(id);\n  const [updateContact] = useUpdateContactMutation();\n\n  const handleUpdateContact = async contactToEdit => {\n    if (contact.name.toLowerCase() === contactToEdit.name.toLowerCase()) {\n      return alert(`${contactToEdit.name} is already in contacts.`);\n    }\n\n    try {\n      await updateContact({ id, ...contactToEdit });\n    } catch (e) {\n      console.log(e);\n    }\n    toggleModal();\n  };\n\n  return (\n    <Overlay>\n      <Modal>\n        {contact && (\n          <Form\n            name={contact.name}\n            phone={contact.phone}\n            onSubmit={handleUpdateContact}\n            btnText=\"Save\"\n          />\n        )}\n\n        <button type=\"button\" onClick={toggleModal}>\n          Close\n        </button>\n      </Modal>\n    </Overlay>\n  );\n};\n","import React, { useState } from 'react';\nimport { useDeleteContactMutation } from 'redux/contactsSlice';\nimport PropTypes from 'prop-types';\nimport * as SC from './ContactListItem.styled';\nimport { EditContactModal } from 'components/EditContactModal/EditContactModal';\n\nexport const ContactListItem = ({ name, phone, id }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n\n  const toggleModal = () => setShowModal(showModal => !showModal);\n\n  return (\n    <SC.ContactListLi>\n      <p>\n        {name}: {phone}\n      </p>\n      <SC.BtnWrapper>\n        <SC.ContactListButton\n          type=\"button\"\n          id={id}\n          onClick={toggleModal}\n          disabled={isLoading}\n        >\n          Edit\n        </SC.ContactListButton>\n        <SC.ContactListButton\n          type=\"button\"\n          id={id}\n          onClick={() => deleteContact(id)}\n          disabled={isLoading}\n        >\n          Delete\n        </SC.ContactListButton>\n      </SC.BtnWrapper>\n      {showModal && <EditContactModal id={id} toggleModal={toggleModal} />}\n    </SC.ContactListLi>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ContactListUl = styled.ul`\n  margin-left: auto;\n  margin-right: auto;\n  width: 350px;\n  border: ${p => `${p.theme.borders.normal} ${p.theme.colors.grey}`};\n  padding: ${p => p.theme.space[4]}px;\n`;\n\nexport const Info = styled.p`\n  text-align: center;\n`;\n","import React from 'react';\nimport { useFetchContactsQuery } from 'redux/contactsSlice';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from 'redux/selectors';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport * as SC from './ContactList.styled';\n\nexport const ContactList = () => {\n  const { data: contacts } = useFetchContactsQuery();\n  const filter = useSelector(getFilter);\n\n  const visibleContacts = !contacts\n    ? []\n    : contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n  return (\n    <>\n      {!contacts ? (\n        <SC.Info>No contacts</SC.Info>\n      ) : (\n        <SC.ContactListUl>\n          {visibleContacts.map(({ id, name, phone }) => (\n            <ContactListItem key={id} id={id} name={name} phone={phone} />\n          ))}\n        </SC.ContactListUl>\n      )}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: ${p => p.theme.space[4]}px;\n  width: 350px;\n  border: ${p => `${p.theme.borders.normal} ${p.theme.colors.grey}`};\n  padding: ${p => p.theme.space[4]}px;\n`;\n\nexport const FilterTitle = styled.h3`\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const FilterInput = styled.input`\n  width: 100%;\n`;\n","import React from 'react';\nimport { FilterTitle, FilterContainer, FilterInput } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/selectors';\nimport { setFilter } from 'redux/filterSlice';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <FilterContainer>\n      <label>\n        <FilterTitle>Find contacts by name</FilterTitle>\n        <FilterInput\n          type=\"text\"\n          value={filter}\n          placeholder='Enter name to find...'\n          onChange={changeFilter}\n        ></FilterInput>\n      </label>\n    </FilterContainer>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.slyted';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrapper>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#0b68f3ab\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </LoaderWrapper>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 600px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const PhonebookTitle = styled.h1`\n  text-align: center;\n  margin-top: ${p => p.theme.space[3]}px;\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const ContactsTitle = styled.h2`\n  text-align: center;\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n","import { useFetchContactsQuery } from 'redux/contactsSlice';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Filter } from '../../components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { Toaster } from 'react-hot-toast';\nimport * as SC from './Contacts.styled';\n\nconst Contacts = () => {\n  const { data, error, isFetching } = useFetchContactsQuery();\n\n  return (\n    <SC.Container>\n      <SC.PhonebookTitle>Phonebook</SC.PhonebookTitle>\n      <ContactForm />\n      <SC.ContactsTitle>Contacts</SC.ContactsTitle>\n      <Filter />\n      {data && <ContactList />}\n      {isFetching && !error && <Loader />}\n      <Toaster position=\"top-right\" reverseOrder={true} />\n    </SC.Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["Form","styled","p","theme","space","borders","normal","colors","grey","Label","Button","secondary","white","radii","md","fontWeights","bold","primary","name","phone","btnText","onSubmit","useState","contactName","setContactName","contactNumber","setContactNumber","handleChange","e","target","value","preventDefault","form","contactToAdd","elements","reset","type","pattern","title","required","onChange","ContactForm","useAddContactMutation","addContact","contacts","useFetchContactsQuery","data","find","contact","toLowerCase","alert","toast","getFilter","state","filter","ContactListLi","ContactListButton","BtnWrapper","Overlay","Modal","EditContactModal","id","toggleModal","useFetchContactsByIdQuery","useUpdateContactMutation","updateContact","handleUpdateContact","contactToEdit","console","log","onClick","ContactListItem","showModal","setShowModal","useDeleteContactMutation","deleteContact","isLoading","disabled","ContactListUl","Info","ContactList","useSelector","visibleContacts","includes","map","FilterContainer","FilterTitle","FilterInput","Filter","dispatch","useDispatch","placeholder","setFilter","currentTarget","LoaderWrapper","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","Container","PhonebookTitle","ContactsTitle","error","isFetching","position","reverseOrder"],"sourceRoot":""}