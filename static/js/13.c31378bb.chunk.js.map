{"version":3,"file":"static/js/13.c31378bb.chunk.js","mappings":"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","sources":["components/ContactForm/Form/Form.jsx","components/ContactForm/ContactForm.jsx","redux/filter/selectors.js","components/ContactListItem/ContactListItem.styled.jsx","components/EditContactForm/EditContactForm.jsx","components/Modal/Modal.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport PropTypes from 'prop-types';\nimport TextField from '@mui/material/TextField';\nimport { Button } from '@mui/material';\nimport toast from 'react-hot-toast';\n\n\nexport const Form = ({ name = '', number = '', btnText, onSubmit }) => {\n  const [contactName, setContactName] = useState(name);\n  const [contactNumber, setContactNumber] = useState(number);\n\n  const formSubmitHandler = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.name.value.trim();\n    const number = form.elements.number.value.trim();\n\n    if (name === '' || number === '') {\n      return toast.error('Fill all fields');\n    }\n\n    const contactToAdd = {\n      name,\n      number,\n    };\n    onSubmit(contactToAdd);\n\n    setContactName('');\n    setContactNumber('');\n    form.reset();\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setContactName(value);\n        break;\n\n      case 'number':\n        setContactNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '10px',\n        maxWidth: '360px',\n        width: '100%',\n        p: '10px',\n      }}\n      autoComplete=\"off\"\n      required={true}\n      error=\"true\"\n      validate=\"true\"\n      onSubmit={formSubmitHandler}\n    >\n      <TextField\n        label=\"Name\"\n        name=\"name\"\n        type=\"text\"\n        size=\"small\"\n        onChange={handleChange}\n        value={contactName}\n        sx={{ width: '100%' }}\n        inputProps={{\n          pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        }}\n        required\n      />\n      <TextField\n        label=\"Number\"\n        name=\"number\"\n        type=\"tel\"\n        size=\"small\"\n        onChange={handleChange}\n        value={contactNumber}\n        sx={{ width: '100%' }}\n        inputProps={{\n          pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n          title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        }}\n        required\n      />\n\n      <Button\n        sx={{ width: '120px', mx: 'auto' }}\n        type=\"submit\"\n        variant=\"outlined\"\n        size=\"small\"\n      >\n        {btnText}\n      </Button>\n    </Box>\n  );\n};\n\nForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  btnText: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport {\n  useFetchContactsQuery,\n  useAddContactMutation,\n} from 'redux/contacts/contactsSlice';\nimport { Form } from './Form/Form';\nimport toast from 'react-hot-toast';\n\nexport const ContactForm = ({ handleClose }) => {\n  const [addContact] = useAddContactMutation();\n  const { data: contacts } = useFetchContactsQuery();\n\n  const formSubmitHandler = contactToAdd => {\n    if (\n      contacts.find(\n        contact =>\n          contact.name.toLowerCase() === contactToAdd.name.toLowerCase()\n      )\n    ) {\n      return alert(`${contactToAdd.name} is already in contacts.`);\n    }\n\n    addContact(contactToAdd);\n    toast.success('You add new contact.');\n\n    handleClose();\n  };\n\n  return <Form onSubmit={formSubmitHandler} btnText=\"Add contact\" />;\n};\n","\nexport const getFilter = state => state.filter;\n","import styled from '@emotion/styled';\n\nexport const ContactListLi = styled.li`\n  display: flex;\n  align-items: center;\n  padding: 8px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  box-shadow: 0px 3px 1px -2px rgb(0 0 0 / 20%),\n    0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%);\n  transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n\n  &:hover {\n    box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n      0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  }\n\n  @media (min-width: 480px) {\n    width: 100%;\n  }\n`;\n\nexport const ContactListText = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\n","import {\n  useFetchContactsQuery,\n  useUpdateContactMutation,\n} from 'redux/contacts/contactsSlice';\nimport { Box, Button } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Form } from 'components/ContactForm/Form/Form';\nimport toast from 'react-hot-toast';\n\nexport const EditContactForm = ({ handleClose, id }) => {\n  const [updateContact] = useUpdateContactMutation();\n  const { data: contacts } = useFetchContactsQuery();\n\n  const contactById = contacts.filter(contact => contact.id === id);\n  const findeMatch = contacts.map(contact => contact.name.toLowerCase());\n\n  const handleUpdateContact = async contactToEdit => {\n    if (findeMatch.includes(contactToEdit.name.toLowerCase())) {\n      handleClose();\n      toast.error(`${contactToEdit.name} is already in contacts.`);\n      return;\n    }\n\n    try {\n      await updateContact({ id, ...contactToEdit });\n    } catch (e) {\n      console.log(e);\n    }\n    handleClose();\n  };\n\n  return (\n    <Box>\n      <Form\n        name={contactById[0].name}\n        number={contactById[0].number}\n        onSubmit={handleUpdateContact}\n        btnText=\"Save\"\n      />\n\n      <Button\n        sx={{\n          position: 'absolute',\n          top: '5px',\n          right: '5px',\n          p: '0',\n          minWidth: '0',\n        }}\n        onClick={handleClose}\n      >\n        <CloseIcon fontSize=\"small\" />\n      </Button>\n    </Box>\n  );\n};\n","import * as React from 'react';\nimport Backdrop from '@mui/material/Backdrop';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Fade from '@mui/material/Fade';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nexport default function TransitionsModal({ children, handleClose, open }) {\n  const isMobile = useMediaQuery('(max-width:480px)');\n\n  const style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: `${isMobile ? '85%' : '400px'}`,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n  };\n\n  return (\n    <>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <Box sx={style}>{children}</Box>\n        </Fade>\n      </Modal>\n    </>\n  );\n}\n","import React, { useContext } from 'react';\nimport { useDeleteContactMutation } from 'redux/contacts/contactsSlice';\nimport PropTypes from 'prop-types';\nimport * as SC from './ContactListItem.styled';\nimport { Box } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport IconButton from '@mui/material/IconButton';\nimport PhoneAndroidIcon from '@mui/icons-material/PhoneAndroid';\nimport PersonIcon from '@mui/icons-material/Person';\nimport { EditContactForm } from 'components/EditContactForm/EditContactForm';\nimport TransitionsModal from 'components/Modal/Modal';\nimport { ModalContext } from 'context/ModalContext';\nimport Avatar from 'react-avatar';\n\nexport const ContactListItem = ({ name, number, id }) => {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n\n  const { open, handleOpen, handleClose } = useContext(ModalContext);\n\n  return (\n    <SC.ContactListLi>\n      <Avatar name={name} size=\"35px\" round={true} />\n      <Box sx={{ textAlign: 'start', marginLeft: '5px' }}>\n        <SC.ContactListText>\n          <PersonIcon sx={{ width: '20px', height: '20px' }} />\n          {name}\n        </SC.ContactListText>\n        <SC.ContactListText>\n          <PhoneAndroidIcon sx={{ width: '20px', height: '20px' }} /> {number}\n        </SC.ContactListText>\n      </Box>\n\n      <Box\n        sx={{\n          display: 'flex',\n          gap: '5px',\n          marginLeft: 'auto',\n        }}\n      >\n        <IconButton\n          aria-label=\"edit\"\n          size=\"small\"\n          onClick={handleOpen}\n          disabled={isLoading}\n        >\n          <EditIcon />\n        </IconButton>\n        <IconButton\n          aria-label=\"delete\"\n          size=\"small\"\n          onClick={() => deleteContact(id)}\n          disabled={isLoading}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </Box>\n      {open && (\n        <TransitionsModal open={open} handleClose={handleClose}>\n          <EditContactForm id={id} handleClose={handleClose} />\n        </TransitionsModal>\n      )}\n    </SC.ContactListLi>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ContactListUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  /* min-width: 350px; */\n  padding: 12px;\n\n  @media (min-width: 480px) {\n    align-items: center;\n  }\n\n  @media (min-width: 768px) {\n    min-width: 350px;\n  }\n`;\n\nexport const Info = styled.p`\n  text-align: center;\n`;\n\nexport const TextInfo = styled.p`\n  font-size: 16px;\n  color: #1976d2;\n  font-weight: 600;\n  padding-top: 12px;\n`;\n","import React from 'react';\nimport { useFetchContactsQuery } from 'redux/contacts/contactsSlice';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from 'redux/filter/selectors';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport * as SC from './ContactList.styled';\n\nexport const ContactList = () => {\n  const { data: contacts } = useFetchContactsQuery();\n  const filter = useSelector(getFilter);\n\n  const visibleContacts = !contacts\n    ? []\n    : contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n  return (\n    <>\n      {contacts?.length === 0 ? (\n        <SC.TextInfo>No contacts</SC.TextInfo>\n      ) : (\n        <>\n          <SC.TextInfo>Total contacts: {visibleContacts.length}</SC.TextInfo>\n          <SC.ContactListUl>\n            {visibleContacts.map(({ id, name, number }) => (\n              <ContactListItem key={id} id={id} name={name} number={number} />\n            ))}\n          </SC.ContactListUl>\n        </>\n      )}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterTitle = styled.h3`\n  color: #1976d2;\n`;\n\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { getFilter } from 'redux/filter/selectors';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport * as SC from './Filter.styled';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  const isMobile = useMediaQuery('(max-width:480px)');\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        gap: '10px',\n        maxWidth: '360px',\n        p: `${!isMobile && '10px'}`,\n      }}\n    >\n      {!isMobile && <SC.FilterTitle>Find contacts by name</SC.FilterTitle>}\n      <TextField\n        placeholder=\"Enter name to find...\"\n        name=\"text\"\n        type=\"text\"\n        size=\"small\"\n        value={filter}\n        onChange={changeFilter}\n        sx={{ width: '100%'}}\n      />\n    </Box>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContactsTitle = styled.h2`\n  color: #1976d2;\n\n  @media (max-width: 480px) {\n    margin-right: 10px;\n  }\n`;\n","import { useFetchContactsQuery } from 'redux/contacts/contactsSlice';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Filter } from '../../components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { Toaster } from 'react-hot-toast';\nimport * as SC from './Contacts.styled';\nimport Box from '@mui/material/Box';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useContext} from 'react';\nimport { Button } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport TransitionsModal from 'components/Modal/Modal';\nimport { ModalContext } from 'context/ModalContext';\n\nconst Contacts = () => {\n  const { data, error, isFetching } = useFetchContactsQuery(\n    { count: 5 },\n    { refetchOnMountOrArgChange: true }\n  );\n\n  const { open, handleOpen, handleClose } = useContext(ModalContext);\n\n  const isMobile = useMediaQuery('(max-width:480px)');\n  const isDesktop = useMediaQuery('(min-width:1200px)');\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-around',\n        flexDirection: `${isMobile && 'column'}`,\n      }}\n    >\n      <Box\n        sx={{\n          textAlign: 'center',\n          padding: '12px',\n        }}\n      >\n        {isMobile && (\n          <Box\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n            }}\n          >\n            <SC.ContactsTitle>Contacts</SC.ContactsTitle>\n\n            <Filter />\n\n            <Button onClick={handleOpen}>\n              <AddCircleOutlineIcon />\n            </Button>\n\n            {open && (\n              <TransitionsModal handleClose={handleClose} open={open}>\n                <ContactForm handleClose={handleClose} />\n                <Button\n                  sx={{\n                    position: 'absolute',\n                    top: '5px',\n                    right: '5px',\n                    p: '0',\n                    minWidth: '0',\n                  }}\n                  onClick={handleClose}\n                >\n                  <CloseIcon fontSize=\"small\" />\n                </Button>\n              </TransitionsModal>\n            )}\n          </Box>\n        )}\n\n        {data && <ContactList />}\n        {isFetching && !error && <Loader />}\n      </Box>\n\n      <Box\n        sx={{\n          display: 'grid',\n          gap: '40px',\n          textAlign: 'center',\n\n          minWidth: `${isDesktop && '400px'}`,\n        }}\n      >\n        {!isMobile && <ContactForm handleClose={handleClose} />}\n\n        {!isMobile && <Filter />}\n      </Box>\n\n      <Toaster position=\"top-right\" reverseOrder={true} />\n    </Box>\n  );\n};\n\nexport default Contacts;\n"],"names":["Form","name","number","btnText","onSubmit","useState","contactName","setContactName","contactNumber","setContactNumber","handleChange","e","target","value","Box","component","sx","display","flexDirection","gap","maxWidth","width","p","autoComplete","required","error","validate","preventDefault","form","elements","trim","toast","reset","TextField","label","type","size","onChange","inputProps","pattern","title","Button","mx","variant","ContactForm","handleClose","useAddContactMutation","addContact","contacts","useFetchContactsQuery","data","contactToAdd","find","contact","toLowerCase","alert","getFilter","state","filter","ContactListLi","styled","ContactListText","EditContactForm","id","useUpdateContactMutation","updateContact","contactById","findeMatch","map","handleUpdateContact","contactToEdit","includes","console","log","position","top","right","minWidth","onClick","Close","fontSize","TransitionsModal","children","open","isMobile","useMediaQuery","style","left","transform","bgcolor","border","boxShadow","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","ContactListItem","useDeleteContactMutation","deleteContact","isLoading","useContext","ModalContext","handleOpen","round","textAlign","marginLeft","Person","height","PhoneAndroid","IconButton","disabled","Edit","Delete","ContactListUl","TextInfo","ContactList","useSelector","visibleContacts","length","FilterTitle","Filter","dispatch","useDispatch","alignItems","placeholder","setFilter","currentTarget","ContactsTitle","count","refetchOnMountOrArgChange","isFetching","isDesktop","justifyContent","padding","AddCircleOutline","Loader","reverseOrder"],"sourceRoot":""}