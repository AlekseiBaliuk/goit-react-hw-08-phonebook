{"version":3,"file":"static/js/13.e79c9cb7.chunk.js","mappings":"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","sources":["components/ContactForm/Form/Form.jsx","components/ContactForm/ContactForm.jsx","redux/filter/selectors.js","components/ContactListItem/ContactListItem.styled.jsx","components/EditContactForm/EditContactForm.jsx","components/Modal/Modal.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport PropTypes from 'prop-types';\nimport TextField from '@mui/material/TextField';\nimport * as yup from 'yup';\nimport { Button } from '@mui/material';\nimport toast from 'react-hot-toast';\n\nexport const Form = ({ name = '', number = '', btnText, onSubmit }) => {\n  const [contactName, setContactName] = useState(name);\n  const [contactNumber, setContactNumber] = useState(number);\n  const [er, setEr] = useState(null);\n\n  const formSubmitHandler = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.name.value.trim();\n    const number = form.elements.number.value.trim();\n\n    let schema = yup.object({\n      name: yup.string().required('Name is required'),\n      number: yup.number().required('Number is required').positive().integer(),\n    });\n\n    if (name === '' || number === '') {\n      return toast.error('Fill all fields');\n    }\n\n    const contactToAdd = {\n      name,\n      number,\n    };\n\n    schema\n      .validate({\n        contactToAdd,\n      })\n      .then(() => onSubmit(contactToAdd))\n      .catch(e => setEr(e));\n    // onSubmit(contactToAdd);\n\n    setContactName('');\n    setContactNumber('');\n    form.reset();\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setContactName(value);\n        break;\n\n      case 'number':\n        setContactNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '10px',\n        maxWidth: '360px',\n        width: '100%',\n        p: '10px',\n      }}\n      autoComplete=\"off\"\n      required={true}\n      error=\"true\"\n      validate=\"true\"\n      onSubmit={formSubmitHandler}\n    >\n      <TextField\n        label=\"Name\"\n        name=\"name\"\n        type=\"name\"\n        size=\"small\"\n        onChange={handleChange}\n        value={contactName}\n        sx={{ width: '100%' }}\n        error={er && Boolean(er)}\n        helperText={er && 'Invalid name or number'}\n      />\n      <TextField\n        label=\"Number\"\n        name=\"number\"\n        type=\"phone\"\n        size=\"small\"\n        onChange={handleChange}\n        value={contactNumber}\n        sx={{ width: '100%' }}\n        error={er && Boolean(er)}\n        helperText={er && 'Invalid name or number'}\n      />\n\n      <Button\n        sx={{ width: '120px', mx: 'auto' }}\n        type=\"submit\"\n        variant=\"outlined\"\n        size=\"small\"\n      >\n        {btnText}\n      </Button>\n    </Box>\n  );\n};\n\nForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  btnText: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport {\n  useFetchContactsQuery,\n  useAddContactMutation,\n} from 'redux/contacts/contactsSlice';\nimport { Form } from './Form/Form';\nimport toast from 'react-hot-toast';\n\nexport const ContactForm = ({ handleClose }) => {\n  const [addContact] = useAddContactMutation();\n  const { data: contacts } = useFetchContactsQuery();\n\n  const formSubmitHandler = contactToAdd => {\n    if (\n      contacts.find(\n        contact =>\n          contact.name.toLowerCase() === contactToAdd.name.toLowerCase()\n      )\n    ) {\n      return alert(`${contactToAdd.name} is already in contacts.`);\n    }\n\n    addContact(contactToAdd);\n    toast.success('You add new contact.');\n\n    handleClose();\n  };\n\n  return <Form onSubmit={formSubmitHandler} btnText=\"Add contact\" />;\n};\n","\nexport const getFilter = state => state.filter;\n","import styled from '@emotion/styled';\n\nexport const ContactListLi = styled.li`\n  display: flex;\n  min-width: 100%;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  box-shadow: 0px 3px 1px -2px rgb(0 0 0 / 20%),\n    0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%);\n  transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n\n  &:hover {\n    box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n      0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  }\n`;\n\nexport const ContactListText = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\n","import {\n  useFetchContactsQuery,\n  useUpdateContactMutation,\n} from 'redux/contacts/contactsSlice';\nimport { Box, Button } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Form } from 'components/ContactForm/Form/Form';\nimport toast from 'react-hot-toast';\n\nexport const EditContactForm = ({ handleClose, id }) => {\n  const [updateContact] = useUpdateContactMutation();\n  const { data: contacts } = useFetchContactsQuery();\n\n  const contactById = contacts.filter(contact => contact.id === id);\n  const findeMatch = contacts.map(contact => contact.name.toLowerCase());\n\n  const handleUpdateContact = async contactToEdit => {\n    if (findeMatch.includes(contactToEdit.name.toLowerCase())) {\n      handleClose();\n      toast.error(`${contactToEdit.name} is already in contacts.`);\n      return;\n    }\n\n    try {\n      await updateContact({ id, ...contactToEdit });\n    } catch (e) {\n      console.log(e);\n    }\n    handleClose();\n  };\n\n  return (\n    <Box>\n      <Form\n        name={contactById[0].name}\n        number={contactById[0].number}\n        onSubmit={handleUpdateContact}\n        btnText=\"Save\"\n      />\n\n      <Button\n        sx={{\n          position: 'absolute',\n          top: '5px',\n          right: '5px',\n          p: '0',\n          minWidth: '0',\n        }}\n        onClick={handleClose}\n      >\n        <CloseIcon fontSize=\"small\" />\n      </Button>\n    </Box>\n  );\n};\n","import * as React from 'react';\nimport Backdrop from '@mui/material/Backdrop';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Fade from '@mui/material/Fade';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nexport default function TransitionsModal({ children, handleClose, open }) {\n  // const [open, setOpen] = React.useState(false);\n  // const handleOpen = () => setOpen(true);\n  // const handleClose = () => setOpen(false);\n  const isMobile = useMediaQuery('(max-width:480px)');\n\n  const style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: `${isMobile ? '85%' : '400px'}`,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n  };\n\n  return (\n    <>\n      {/* <Button onClick={handleOpen}>Add contact</Button> */}\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <Box sx={style}>{children}</Box>\n        </Fade>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDeleteContactMutation } from 'redux/contacts/contactsSlice';\nimport PropTypes from 'prop-types';\nimport * as SC from './ContactListItem.styled';\n// import { ContactModal } from 'components/ContactModal/ContactModal';\nimport { Box } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport IconButton from '@mui/material/IconButton';\nimport PhoneAndroidIcon from '@mui/icons-material/PhoneAndroid';\nimport PersonIcon from '@mui/icons-material/Person';\nimport { EditContactForm } from 'components/EditContactForm/EditContactForm';\nimport TransitionsModal from 'components/Modal/Modal';\n\nexport const ContactListItem = ({ name, number, id }) => {\n  // const [showModal, setShowModal] = useState(false);\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n\n  // const toggleModal = () => setShowModal(showModal => !showModal);\n\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <SC.ContactListLi>\n      <Box sx={{ textAlign: 'start' }}>\n        <SC.ContactListText>\n          <PersonIcon sx={{ width: '20px', height: '20px' }} />\n          {name}\n        </SC.ContactListText>\n        <SC.ContactListText>\n          <PhoneAndroidIcon sx={{ width: '20px', height: '20px' }} /> {number}\n        </SC.ContactListText>\n      </Box>\n\n      <Box\n        sx={{\n          display: 'flex',\n          gap: '5px',\n        }}\n      >\n        <IconButton\n          aria-label=\"edit\"\n          size=\"small\"\n          onClick={handleOpen}\n          disabled={isLoading}\n        >\n          <EditIcon />\n        </IconButton>\n        <IconButton\n          aria-label=\"delete\"\n          size=\"small\"\n          onClick={() => deleteContact(id)}\n          disabled={isLoading}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </Box>\n      {open && (\n        <TransitionsModal open={open} handleClose={handleClose}>\n          <EditContactForm id={id} handleClose={handleClose} />\n        </TransitionsModal>\n      )}\n    </SC.ContactListLi>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ContactListUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  min-width: 350px;\n  padding: 12px;\n\n  @media (max-width: 480px) {\n    align-items: center;\n  }\n`;\n\nexport const Info = styled.p`\n  text-align: center;\n`;\n\nexport const TextInfo = styled.p`\n  font-size: 16px;\n  color: #1976d2;\n  font-weight: 600;\n`;\n","import React from 'react';\nimport { useFetchContactsQuery } from 'redux/contacts/contactsSlice';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from 'redux/filter/selectors';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport * as SC from './ContactList.styled';\n\nexport const ContactList = () => {\n  const { data: contacts } = useFetchContactsQuery();\n  const filter = useSelector(getFilter);\n\n  const visibleContacts = !contacts\n    ? []\n    : contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n  return (\n    <>\n      {contacts?.length === 0 ? (\n        <SC.TextInfo>No contacts</SC.TextInfo>\n      ) : (\n        <SC.ContactListUl>\n          <SC.TextInfo>Total contacts: {visibleContacts.length}</SC.TextInfo>\n          {visibleContacts.map(({ id, name, number }) => (\n            <ContactListItem key={id} id={id} name={name} number={number} />\n          ))}\n        </SC.ContactListUl>\n      )}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterTitle = styled.h3`\n  color: #1976d2;\n`;\n\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { getFilter } from 'redux/filter/selectors';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport * as SC from './Filter.styled';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  const isMobile = useMediaQuery('(max-width:480px)');\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        gap: '10px',\n        maxWidth: '360px',\n        p: `${!isMobile && '10px'}`,\n      }}\n    >\n      {!isMobile && <SC.FilterTitle>Find contacts by name</SC.FilterTitle>}\n      <TextField\n        placeholder=\"Enter name to find...\"\n        name=\"text\"\n        type=\"text\"\n        size=\"small\"\n        value={filter}\n        onChange={changeFilter}\n        sx={{ width: '100%'}}\n      />\n    </Box>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContactsTitle = styled.h2`\n  color: #1976d2;\n  /* padding: 12px; */\n`;\n","import { useFetchContactsQuery } from 'redux/contacts/contactsSlice';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Filter } from '../../components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { Toaster } from 'react-hot-toast';\nimport * as SC from './Contacts.styled';\nimport Box from '@mui/material/Box';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useState } from 'react';\nimport { Button } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport TransitionsModal from 'components/Modal/Modal';\n\nconst Contacts = () => {\n  const { data, error, isFetching } = useFetchContactsQuery(\n    { count: 5 },\n    { refetchOnMountOrArgChange: true }\n  );\n\n  const isMobile = useMediaQuery('(max-width:480px)');\n\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        flexDirection: `${isMobile && 'column'}`,\n      }}\n    >\n      <Box\n        sx={{\n          textAlign: 'center',\n          minWidth: '400px',\n          padding: '12px',\n        }}\n      >\n        {isMobile && (\n          <Box\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n            }}\n          >\n            <SC.ContactsTitle>Contacts</SC.ContactsTitle>\n\n            <Filter />\n\n            <Button onClick={handleOpen}>\n              <AddCircleOutlineIcon />\n            </Button>\n\n            {/* <Button onClick={toggleModal}>\n              <AddCircleOutlineIcon />\n            </Button> */}\n            {/* {showModal && (\n              <ContactModal toggleModal={toggleModal}>\n                <ContactForm toggleModal={toggleModal} />\n                <Button\n                  sx={{\n                    position: 'absolute',\n                    top: '5px',\n                    right: '5px',\n                    p: '0',\n                    minWidth: '0',\n                  }}\n                  onClick={toggleModal}\n                >\n                  <CloseIcon fontSize=\"small\" />\n                </Button>\n              </ContactModal>\n            )} */}\n            {open && (\n              <TransitionsModal handleClose={handleClose} open={open}>\n                <ContactForm handleClose={handleClose} />\n                <Button\n                  sx={{\n                    position: 'absolute',\n                    top: '5px',\n                    right: '5px',\n                    p: '0',\n                    minWidth: '0',\n                  }}\n                  onClick={handleClose}\n                >\n                  <CloseIcon fontSize=\"small\" />\n                </Button>\n              </TransitionsModal>\n            )}\n          </Box>\n        )}\n\n        {data && <ContactList />}\n        {isFetching && !error && <Loader />}\n      </Box>\n\n      <Box\n        sx={{\n          display: 'grid',\n          gap: '40px',\n          textAlign: 'center',\n          minWidth: '400px',\n        }}\n      >\n        {!isMobile && <ContactForm handleClose={handleClose} />}\n\n        {!isMobile && <Filter />}\n      </Box>\n\n      <Toaster position=\"top-right\" reverseOrder={true} />\n    </Box>\n  );\n};\n\nexport default Contacts;\n"],"names":["Form","name","number","btnText","onSubmit","useState","contactName","setContactName","contactNumber","setContactNumber","er","setEr","handleChange","e","target","value","Box","component","sx","display","flexDirection","gap","maxWidth","width","p","autoComplete","required","error","validate","preventDefault","form","elements","trim","schema","yup","positive","integer","toast","contactToAdd","then","catch","reset","TextField","label","type","size","onChange","Boolean","helperText","Button","mx","variant","ContactForm","handleClose","useAddContactMutation","addContact","contacts","useFetchContactsQuery","data","find","contact","toLowerCase","alert","getFilter","state","filter","ContactListLi","styled","ContactListText","EditContactForm","id","useUpdateContactMutation","updateContact","contactById","findeMatch","map","handleUpdateContact","contactToEdit","includes","console","log","position","top","right","minWidth","onClick","Close","fontSize","TransitionsModal","children","open","isMobile","useMediaQuery","style","left","transform","bgcolor","border","boxShadow","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","ContactListItem","useDeleteContactMutation","deleteContact","isLoading","setOpen","textAlign","Person","height","PhoneAndroid","IconButton","disabled","Edit","Delete","ContactListUl","TextInfo","ContactList","useSelector","visibleContacts","length","FilterTitle","Filter","dispatch","useDispatch","alignItems","placeholder","setFilter","currentTarget","ContactsTitle","count","refetchOnMountOrArgChange","isFetching","justifyContent","padding","AddCircleOutline","Loader","reverseOrder"],"sourceRoot":""}